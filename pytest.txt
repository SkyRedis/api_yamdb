============================= test session starts =============================
platform win32 -- Python 3.11.0, pytest-6.2.4, py-1.11.0, pluggy-0.13.1 -- C:\Users\Alexander\YP\Dev\api_yamdb\venv\Scripts\python.exe
django: settings: api_yamdb.settings (from ini)
rootdir: C:\Users\Alexander\YP\Dev\api_yamdb, configfile: pytest.ini, testpaths: tests/
plugins: django-4.4.0, pythonpath-0.7.3
collecting ... collected 77 items

tests/test_00_user_registration.py::Test00UserRegistration::test_00_nodata_signup PASSED [  1%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_invalid_data_signup PASSED [  2%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_singup_length_and_simbols_validation[data0-messege0] PASSED [  3%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_singup_length_and_simbols_validation[data1-messege1] PASSED [  5%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_singup_length_and_simbols_validation[data2-messege2] PASSED [  6%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_valid_data_user_signup PASSED [  7%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_valid_data_admin_create_user PASSED [  9%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data0-messege0] PASSED [ 10%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data1-messege1] PASSED [ 11%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data2-messege2] PASSED [ 12%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data3-messege3] PASSED [ 14%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data4-messege4] PASSED [ 15%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_obtain_jwt_token_invalid_data PASSED [ 16%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_registration_me_username_restricted PASSED [ 18%]
tests/test_00_user_registration.py::Test00UserRegistration::test_00_registration_same_email_restricted PASSED [ 19%]
tests/test_00_user_registration.py::Test00UserRegistration::test_get_new_confirmation_code_for_existing_user PASSED [ 20%]
tests/test_00_user_registration.py::Test00UserRegistration::test_get_confirmation_code_for_user_created_by_admin PASSED [ 22%]
tests/test_01_users.py::Test01UserAPI::test_01_users_not_authenticated PASSED [ 23%]
tests/test_01_users.py::Test01UserAPI::test_02_users_username_not_authenticated PASSED [ 24%]
tests/test_01_users.py::Test01UserAPI::test_03_users_me_not_authenticated PASSED [ 25%]
tests/test_01_users.py::Test01UserAPI::test_04_users_get_admin PASSED    [ 27%]
tests/test_01_users.py::Test01UserAPI::test_04_02_users_get_search PASSED [ 28%]
tests/test_01_users.py::Test01UserAPI::test_04_01_users_get_admin_only PASSED [ 29%]
tests/test_01_users.py::Test01UserAPI::test_05_01_users_post_admin_bad_requests PASSED [ 31%]
tests/test_01_users.py::Test01UserAPI::test_05_02_users_post_admin_user_creation[data0-] PASSED [ 32%]
tests/test_01_users.py::Test01UserAPI::test_05_02_users_post_admin_user_creation[data1-без указания роли нового пользователя ] PASSED [ 33%]
tests/test_01_users.py::Test01UserAPI::test_05_03_users_post_response_has_data PASSED [ 35%]
tests/test_01_users.py::Test01UserAPI::test_05_04_users_post_user_superuser PASSED [ 36%]
tests/test_01_users.py::Test01UserAPI::test_06_users_username_get_admin PASSED [ 37%]
tests/test_01_users.py::Test01UserAPI::test_06_users_username_get_not_admin PASSED [ 38%]
tests/test_01_users.py::Test01UserAPI::test_07_01_users_username_patch_admin PASSED [ 40%]
tests/test_01_users.py::Test01UserAPI::test_07_02_users_username_patch_moderator PASSED [ 41%]
tests/test_01_users.py::Test01UserAPI::test_07_03_users_username_patch_user PASSED [ 42%]
tests/test_01_users.py::Test01UserAPI::test_07_05_users_username_put_not_allowed PASSED [ 44%]
tests/test_01_users.py::Test01UserAPI::test_08_01_users_username_delete_admin PASSED [ 45%]
tests/test_01_users.py::Test01UserAPI::test_08_02_users_username_delete_moderator PASSED [ 46%]
tests/test_01_users.py::Test01UserAPI::test_08_03_users_username_delete_user PASSED [ 48%]
tests/test_01_users.py::Test01UserAPI::test_08_04_users_username_delete_superuser PASSED [ 49%]
tests/test_01_users.py::Test01UserAPI::test_09_users_me_get PASSED       [ 50%]
tests/test_01_users.py::Test01UserAPI::test_09_02_users_me_delete_not_allowed PASSED [ 51%]
tests/test_01_users.py::Test01UserAPI::test_10_01_users_me_patch PASSED  [ 53%]
tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data0-messege0] PASSED [ 54%]
tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data1-messege1] PASSED [ 55%]
tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data2-messege2] PASSED [ 57%]
tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data3-messege3] PASSED [ 58%]
tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data4-messege4] PASSED [ 59%]
tests/test_01_users.py::Test01UserAPI::test_10_03_users_me_patch_change_role_not_allowed PASSED [ 61%]
tests/test_02_category.py::Test02CategoryAPI::test_01_category_not_auth PASSED [ 62%]
tests/test_02_category.py::Test02CategoryAPI::test_02_category_with_admin_user FAILED [ 63%]
tests/test_02_category.py::Test02CategoryAPI::test_03_category_fields_validation[data0-massage0] PASSED [ 64%]
tests/test_02_category.py::Test02CategoryAPI::test_03_category_fields_validation[data1-massage1] PASSED [ 66%]
tests/test_02_category.py::Test02CategoryAPI::test_03_category_fields_validation[data2-massage2] PASSED [ 67%]
tests/test_02_category.py::Test02CategoryAPI::test_04_category_delete_admin FAILED [ 68%]
tests/test_02_category.py::Test02CategoryAPI::test_05_category_check_permission_admin PASSED [ 70%]
tests/test_03_genre.py::Test03GenreAPI::test_01_genre_not_auth PASSED    [ 71%]
tests/test_03_genre.py::Test03GenreAPI::test_02_genre FAILED             [ 72%]
tests/test_03_genre.py::Test03GenreAPI::test_03_category_fields_validation[data0-massage0] PASSED [ 74%]
tests/test_03_genre.py::Test03GenreAPI::test_03_category_fields_validation[data1-massage1] PASSED [ 75%]
tests/test_03_genre.py::Test03GenreAPI::test_03_category_fields_validation[data2-massage2] PASSED [ 76%]
tests/test_03_genre.py::Test03GenreAPI::test_04_genres_delete FAILED     [ 77%]
tests/test_03_genre.py::Test03GenreAPI::test_05_genres_check_permission PASSED [ 79%]
tests/test_04_title.py::Test04TitleAPI::test_01_title_not_auth PASSED    [ 80%]
tests/test_04_title.py::Test04TitleAPI::test_02_title_admin FAILED       [ 81%]
tests/test_04_title.py::Test04TitleAPI::test_03_titles_detail FAILED     [ 83%]
tests/test_04_title.py::Test04TitleAPI::test_04_titles_name_length_validation FAILED [ 84%]
tests/test_04_title.py::Test04TitleAPI::test_05_titles_check_permission FAILED [ 85%]
tests/test_05_review.py::Test05ReviewAPI::test_01_review_not_auth FAILED [ 87%]
tests/test_05_review.py::Test05ReviewAPI::test_02_review_post FAILED     [ 88%]
tests/test_05_review.py::Test05ReviewAPI::test_03_review_detail_get FAILED [ 89%]
tests/test_05_review.py::Test05ReviewAPI::test_04_review_detail_user FAILED [ 90%]
tests/test_05_review.py::Test05ReviewAPI::test_05_reviews_detail_moderator_and_admin FAILED [ 92%]
tests/test_06_comment.py::Test06CommentAPI::test_01_comment_not_auth FAILED [ 93%]
tests/test_06_comment.py::Test06CommentAPI::test_02_comment FAILED       [ 94%]
tests/test_06_comment.py::Test06CommentAPI::test_03_comment_detail_get FAILED [ 96%]
tests/test_06_comment.py::Test06CommentAPI::test_04_comment_detail__user_patch_delete FAILED [ 97%]
tests/test_06_comment.py::Test06CommentAPI::test_05_comment_detail_admin_and_moderator FAILED [ 98%]
tests/test_06_comment.py::Test06CommentAPI::test_06_comment_detail_not_auth FAILED [100%]

================================== FAILURES ===================================
_____________ Test02CategoryAPI.test_02_category_with_admin_user ______________

self = <tests.test_02_category.Test02CategoryAPI object at 0x0000017A114C6D50>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11557150>

    def test_02_category_with_admin_user(self, admin_client):
        categories_count = 0
    
        url = '/api/v1/categories/'
        data = {}
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, (
            f'Если POST-запрос администратора, отправленный к `{url}`, '
            'содержит некорректные данные - должен вернуться ответ со '
            'статусом 400.'
        )
    
        data = {
            'name': 'Фильм',
            'slug': 'films'
        }
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.CREATED, (
            f'Если POST-запрос администратора, отправленный к `{url}`, '
            'содержит корректные данные - должен вернуться ответ со статусом '
            '201.'
        )
        categories_count += 1
    
        data = {
            'name': 'Новые фильмы',
            'slug': 'films'
        }
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, (
            f'Если в POST-запросе администратора к `{url}` '
            'передан уже существующий `slug` - должен вернуться ответ со '
            'статусом 400.'
        )
    
        post_data = {
            'name': 'Книги',
            'slug': 'books'
        }
        response = admin_client.post(url, data=post_data)
        assert response.status_code == HTTPStatus.CREATED, (
            f'Если POST-запрос администратора к `{url}` '
            'содержит корректные данные - должен вернуться ответ со статусом '
            '201.'
        )
        categories_count += 1
    
        response = admin_client.get(url)
        assert response.status_code == HTTPStatus.OK, (
            f'Проверьте, что при GET-запросе к `{url}` возвращается статус '
            '200.'
        )
        data = response.json()
>       check_pagination(url, data, categories_count, post_data)

tests\test_02_category.py:76: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

url = '/api/v1/categories/'
respons_data = {'count': 2, 'next': None, 'previous': None, 'results': [{'id': 1, 'name': 'Фильм', 'slug': 'films'}, {'id': 2, 'name': 'Книги', 'slug': 'books'}]}
expected_count = 2, post_data = {'name': 'Книги', 'slug': 'books'}

    def check_pagination(url, respons_data, expected_count, post_data=None):
        expected_keys = ('count', 'next', 'previous', 'results')
        for key in expected_keys:
            assert key in respons_data, (
                f'Проверьте, что для эндпоинта `{url}` настроена '
                f'пагинация и ответ на GET-запрос содержит ключ {key}.'
            )
        assert respons_data['count'] == expected_count, (
            f'Проверьте, что для эндпоинта `{url}` настроена '
            f'пагинация. Сейчас ключ `count` содержит некорректное значение.'
        )
        assert isinstance(respons_data['results'], list), (
            f'Проверьте, что для эндпоинта `{url}` настроена '
            'пагинация. Значением ключа `results` должен быть список.'
        )
        assert len(respons_data['results']) == expected_count, (
            f'Проверьте, что для эндпоинта `{url}` настроена пагинация. Сейчас '
            'ключ `results` содержит некорректное количество элементов.'
        )
        if post_data:
>           assert post_data in respons_data['results'], (
                f'Проверьте, что для эндпоинта `{url}` настроена пагинация. '
                'Значение параметра `results` отсутствует или содержит '
                'некорректную информацию о существующем объекте.'
            )
E           AssertionError: Проверьте, что для эндпоинта `/api/v1/categories/` настроена пагинация. Значение параметра `results` отсутствует или содержит некорректную информацию о существующем объекте.

tests\utils.py:125: AssertionError
------------------------------ Captured log call ------------------------------
WARNING  django.request:log.py:224 Bad Request: /api/v1/categories/
WARNING  django.request:log.py:224 Bad Request: /api/v1/categories/
_______________ Test02CategoryAPI.test_04_category_delete_admin _______________

self = <tests.test_02_category.Test02CategoryAPI object at 0x0000017A1169A810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A1168F150>

    def test_04_category_delete_admin(self, admin_client):
        category_1, category_2 = create_categories(admin_client)
        response = admin_client.delete(
            f'/api/v1/categories/{category_1["slug"]}/'
        )
        assert response.status_code == HTTPStatus.NO_CONTENT, (
            'Проверьте, что DELETE-запрос администратора к '
            '`/api/v1/categories/{slug}/` возвращает ответ со статусом 204.'
        )
        response = admin_client.get('/api/v1/categories/')
        test_data = response.json()['results']
        assert len(test_data) == 1, (
            'Проверьте, что DELETE-запрос администратора к '
            '`/api/v1/categories/{slug}/` удаляет категорию.'
        )
    
        response = admin_client.get(
            f'/api/v1/categories/{category_2["slug"]}/'
        )
>       assert response.status_code == HTTPStatus.METHOD_NOT_ALLOWED, (
            'Проверьте, что GET-запросы к `/api/v1/categories/{slug}/` '
            'запрещены и возвращают ответ со статусом 405.'
        )
E       AssertionError: Проверьте, что GET-запросы к `/api/v1/categories/{slug}/` запрещены и возвращают ответ со статусом 405.
E       assert 200 == <HTTPStatus.METHOD_NOT_ALLOWED: 405>
E         +200
E         -<HTTPStatus.METHOD_NOT_ALLOWED: 405>

tests\test_02_category.py:113: AssertionError
________________________ Test03GenreAPI.test_02_genre _________________________

self = <tests.test_03_genre.Test03GenreAPI object at 0x0000017A11772810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A115E9150>
client = <django.test.client.Client object at 0x0000017A11771650>

    def test_02_genre(self, admin_client, client):
        genres_count = 0
        url = '/api/v1/genres/'
    
        data = {}
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, (
            f'Если POST-запрос администратора к `{url}` '
            'содержит некорректные данные - должен вернуться ответ со '
            'статусом 400.'
        )
    
        data = {'name': 'Ужасы', 'slug': 'horror'}
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.CREATED, (
            f'Если POST-запрос администратора к `{url}` содержит корректные '
            'данные - должен вернуться ответ со статусом 201.'
        )
        genres_count += 1
    
        data = {'name': 'Триллер', 'slug': 'horror'}
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, (
            f'Если в POST-запросе администратора, отправленном к `{url}`, '
            'передан уже существующий `slug` - должен вернуться ответ со '
            'статусом 400.'
        )
    
        post_data = {'name': 'Комедия', 'slug': 'comedy'}
        response = admin_client.post(url, data=post_data)
        assert response.status_code == HTTPStatus.CREATED, (
            f'Если POST-запрос администратора, отправленный к `{url}`, '
            'содержит корректные данные - должен вернуться ответ со статусом '
            '201.'
        )
        genres_count += 1
    
        response = client.get(url)
        assert response.status_code == HTTPStatus.OK, (
            'Проверьте, что GET-запрос неавторизованного пользователя к '
            f'`{url}` возвращает ответ со статусом 200.'
        )
        data = response.json()
>       check_pagination(url, data, genres_count, post_data)

tests\test_03_genre.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

url = '/api/v1/genres/'
respons_data = {'count': 2, 'next': None, 'previous': None, 'results': [{'id': 1, 'name': 'Ужасы', 'slug': 'horror'}, {'id': 2, 'name': 'Комедия', 'slug': 'comedy'}]}
expected_count = 2, post_data = {'name': 'Комедия', 'slug': 'comedy'}

    def check_pagination(url, respons_data, expected_count, post_data=None):
        expected_keys = ('count', 'next', 'previous', 'results')
        for key in expected_keys:
            assert key in respons_data, (
                f'Проверьте, что для эндпоинта `{url}` настроена '
                f'пагинация и ответ на GET-запрос содержит ключ {key}.'
            )
        assert respons_data['count'] == expected_count, (
            f'Проверьте, что для эндпоинта `{url}` настроена '
            f'пагинация. Сейчас ключ `count` содержит некорректное значение.'
        )
        assert isinstance(respons_data['results'], list), (
            f'Проверьте, что для эндпоинта `{url}` настроена '
            'пагинация. Значением ключа `results` должен быть список.'
        )
        assert len(respons_data['results']) == expected_count, (
            f'Проверьте, что для эндпоинта `{url}` настроена пагинация. Сейчас '
            'ключ `results` содержит некорректное количество элементов.'
        )
        if post_data:
>           assert post_data in respons_data['results'], (
                f'Проверьте, что для эндпоинта `{url}` настроена пагинация. '
                'Значение параметра `results` отсутствует или содержит '
                'некорректную информацию о существующем объекте.'
            )
E           AssertionError: Проверьте, что для эндпоинта `/api/v1/genres/` настроена пагинация. Значение параметра `results` отсутствует или содержит некорректную информацию о существующем объекте.

tests\utils.py:125: AssertionError
------------------------------ Captured log call ------------------------------
WARNING  django.request:log.py:224 Bad Request: /api/v1/genres/
WARNING  django.request:log.py:224 Bad Request: /api/v1/genres/
____________________ Test03GenreAPI.test_04_genres_delete _____________________

self = <tests.test_03_genre.Test03GenreAPI object at 0x0000017A11882810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A1189EC90>

    def test_04_genres_delete(self, admin_client):
        genres = create_genre(admin_client)
        response = admin_client.delete(f'/api/v1/genres/{genres[0]["slug"]}/')
        assert response.status_code == HTTPStatus.NO_CONTENT, (
            'Проверьте, что DELETE-запрос администратора к '
            '`/api/v1/genres/{slug}/` возвращает ответ со  статусом 204.'
        )
        response = admin_client.get('/api/v1/genres/')
        test_data = response.json()['results']
        assert len(test_data) == len(genres) - 1, (
            'Проверьте, что DELETE-запрос администратора к '
            '`/api/v1/genres/{slug}/` удаляет жанр из БД.'
        )
        response = admin_client.get(f'/api/v1/genres/{genres[0]["slug"]}/')
>       assert response.status_code == HTTPStatus.METHOD_NOT_ALLOWED, (
            'Проверьте, что GET-запрос администратора к '
            '`/api/v1/genres/{slug}/` возвращает ответ со статусом 405.'
        )
E       AssertionError: Проверьте, что GET-запрос администратора к `/api/v1/genres/{slug}/` возвращает ответ со статусом 405.
E       assert 404 == <HTTPStatus.METHOD_NOT_ALLOWED: 405>
E         +404
E         -<HTTPStatus.METHOD_NOT_ALLOWED: 405>

tests\test_03_genre.py:98: AssertionError
------------------------------ Captured log call ------------------------------
WARNING  django.request:log.py:224 Not Found: /api/v1/genres/horror/
_____________________ Test04TitleAPI.test_02_title_admin ______________________

self = <tests.test_04_title.Test04TitleAPI object at 0x0000017A118FA890>
admin_client = <rest_framework.test.APIClient object at 0x0000017A1196AFD0>
client = <django.test.client.Client object at 0x0000017A11969610>

    def test_02_title_admin(self, admin_client, client):
        genres = create_genre(admin_client)
        categories = create_categories(admin_client)
        url = '/api/v1/titles/'
        title_count = 0
    
        assert_msg = (
            f'Если POST-запрос администратора к `{url}` '
            'содержит некорректные данные - должен вернуться ответ со '
            'статусом 400.'
        )
        data = {}
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, assert_msg
    
        invalid_data = {
            'name': 'Угнать за 60 секунд',
            'year': 'дветыщи',
            'genre': [genres[1]['slug']],
            'category': categories[1]['slug'],
            'description': 'Угонял машины всю ночь и немного подустал.'
        }
        response = admin_client.post(url, data=invalid_data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, assert_msg
    
        post_data_1 = {
            'name': 'Мост через реку Квай',
            'year': 1957,
            'genre': [genres[0]['slug'], genres[1]['slug']],
            'category': categories[0]['slug'],
            'description': 'Рон Свонсон рекомендует.'
        }
>       response = admin_client.post(url, data=post_data_1)

tests\test_04_title.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Мост через реку Квай>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
WARNING  django.request:log.py:224 Bad Request: /api/v1/titles/
WARNING  django.request:log.py:224 Bad Request: /api/v1/titles/
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
____________________ Test04TitleAPI.test_03_titles_detail _____________________

self = <tests.test_04_title.Test04TitleAPI object at 0x0000017A100B6A50>
client = <django.test.client.Client object at 0x0000017A11B49E50>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11E3EED0>

    def test_03_titles_detail(self, client, admin_client):
>       titles, categories, genres = create_titles(admin_client)

tests\test_04_title.py:183: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
____________ Test04TitleAPI.test_04_titles_name_length_validation _____________

self = <tests.test_04_title.Test04TitleAPI object at 0x0000017A11242810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A1227B150>

    def test_04_titles_name_length_validation(self, admin_client):
        genres = create_genre(admin_client)
        categories = create_categories(admin_client)
        url = '/api/v1/titles/'
    
        data = {
            'name': 'It`s Over 9000!' + '!' * 242,
            'year': 1989,
            'genre': [genres[0]['slug'], genres[1]['slug']],
            'category': categories[0]['slug'],
            'description': 'Dragon Ball Z'
        }
        response = admin_client.post(url, data=data)
        assert response.status_code == HTTPStatus.BAD_REQUEST, (
            'Убедитесь, что при обработке POST-запроса администратора к '
            f'`{url}` проверяется длина поля `name`: название произведения '
            'не может быть длиннее 256 символов.'
        )
    
        data = {
            'name': 'Мост через реку Квай',
            'year': 1957,
            'genre': [genres[0]['slug'], genres[1]['slug']],
            'category': categories[0]['slug'],
            'description': 'Рон Свонсон рекомендует.'
        }
>       response = admin_client.post(url, data=data)

tests\test_04_title.py:279: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Мост через реку Квай>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
WARNING  django.request:log.py:224 Bad Request: /api/v1/titles/
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_______________ Test04TitleAPI.test_05_titles_check_permission ________________

self = <tests.test_04_title.Test04TitleAPI object at 0x0000017A11D80510>
client = <django.test.client.Client object at 0x0000017A11D814D0>
user_client = <rest_framework.test.APIClient object at 0x0000017A11D81A50>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11D82CD0>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11D822D0>

    def test_05_titles_check_permission(self, client, user_client,
                                        moderator_client, admin_client):
>       titles, categories, genres = create_titles(admin_client)

tests\test_04_title.py:302: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
___________________ Test05ReviewAPI.test_01_review_not_auth ___________________

self = <tests.test_05_review.Test05ReviewAPI object at 0x0000017A11435450>
client = <django.test.client.Client object at 0x0000017A1183EED0>
admin_client = <rest_framework.test.APIClient object at 0x0000017A111C4B90>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A1180CED0>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A1142B950>
moderator = <User: TestModerator>

    def test_01_review_not_auth(self, client, admin_client, admin, user_client,
                                user, moderator_client, moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_05_review.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_____________________ Test05ReviewAPI.test_02_review_post _____________________

self = <tests.test_05_review.Test05ReviewAPI object at 0x0000017A11EB5250>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11C10690>
user_client = <rest_framework.test.APIClient object at 0x0000017A11C128D0>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11C13010>
admin = <User: TestAdmin>

    def test_02_review_post(self, admin_client, user_client,
                            moderator_client, admin):
>       titles, _, _ = create_titles(admin_client)

tests\test_05_review.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
__________________ Test05ReviewAPI.test_03_review_detail_get __________________

self = <tests.test_05_review.Test05ReviewAPI object at 0x0000017A11E92810>
client = <django.test.client.Client object at 0x0000017A121622D0>
admin_client = <rest_framework.test.APIClient object at 0x0000017A12163690>
admin = <User: TestAdmin>, user = <User: TestUser>
user_client = <rest_framework.test.APIClient object at 0x0000017A12161950>
moderator = <User: TestModerator>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A12163950>

    def test_03_review_detail_get(self, client, admin_client, admin, user,
                                  user_client, moderator, moderator_client):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_05_review.py:227: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_________________ Test05ReviewAPI.test_04_review_detail_user __________________

self = <tests.test_05_review.Test05ReviewAPI object at 0x0000017A1227A810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A118A86D0>
admin = <User: TestAdmin>, user = <User: TestUser>
user_client = <rest_framework.test.APIClient object at 0x0000017A118ABB10>
moderator = <User: TestModerator>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A118A8C10>

    def test_04_review_detail_user(self, admin_client, admin, user,
                                   user_client, moderator, moderator_client):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_05_review.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_________ Test05ReviewAPI.test_05_reviews_detail_moderator_and_admin __________

self = <tests.test_05_review.Test05ReviewAPI object at 0x0000017A11E82810>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11E80150>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A11E23150>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11E213D0>
moderator = <User: TestModerator>

    def test_05_reviews_detail_moderator_and_admin(self, admin_client, admin,
                                                   user_client, user,
                                                   moderator_client,
                                                   moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
        url_template = '/api/v1/titles/{title_id}/reviews/{review_id}/'
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_05_review.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
__________________ Test06CommentAPI.test_01_comment_not_auth __________________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A11B2FED0>
client = <django.test.client.Client object at 0x0000017A11FB9790>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11FB9510>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A11FBA150>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11FBA050>
moderator = <User: TestModerator>

    def test_01_comment_not_auth(self, client, admin_client, admin,
                                 user_client, user, moderator_client,
                                 moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_06_comment.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
______________________ Test06CommentAPI.test_02_comment _______________________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A12249590>
admin_client = <rest_framework.test.APIClient object at 0x0000017A12172B10>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A11FBA450>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11FBA910>
moderator = <User: TestModerator>

    def test_02_comment(self, admin_client, admin, user_client, user,
                        moderator_client, moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       reviews, titles = create_reviews(admin_client, author_map)

tests\test_06_comment.py:41: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_________________ Test06CommentAPI.test_03_comment_detail_get _________________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A12341610>
client = <django.test.client.Client object at 0x0000017A11E4EC90>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11E4CE10>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A11C48510>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11C48D50>
moderator = <User: TestModerator>

    def test_03_comment_detail_get(self, client, admin_client, admin,
                                   user_client, user, moderator_client,
                                   moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       comments, reviews, titles = create_comments(admin_client, author_map)

tests\test_06_comment.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:267: in create_comments
    reviews, titles = create_reviews(admin_client, authors_map)
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_________ Test06CommentAPI.test_04_comment_detail__user_patch_delete __________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A12371DD0>
admin_client = <rest_framework.test.APIClient object at 0x0000017A12373CD0>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A123732D0>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A12370110>
moderator = <User: TestModerator>

    def test_04_comment_detail__user_patch_delete(self, admin_client, admin,
                                                  user_client, user,
                                                  moderator_client,
                                                  moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       comments, reviews, titles = create_comments(admin_client, author_map)

tests\test_06_comment.py:153: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:267: in create_comments
    reviews, titles = create_reviews(admin_client, authors_map)
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
_________ Test06CommentAPI.test_05_comment_detail_admin_and_moderator _________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A11FCEA50>
admin_client = <rest_framework.test.APIClient object at 0x0000017A11F1EC10>
admin = <User: TestAdmin>
user_client = <rest_framework.test.APIClient object at 0x0000017A11C4A350>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A11C49390>
moderator = <User: TestModerator>

    def test_05_comment_detail_admin_and_moderator(self, admin_client, admin,
                                                   user_client, user,
                                                   moderator_client,
                                                   moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       comments, reviews, titles = create_comments(admin_client, author_map)

tests\test_06_comment.py:260: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:267: in create_comments
    reviews, titles = create_reviews(admin_client, authors_map)
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
______________ Test06CommentAPI.test_06_comment_detail_not_auth _______________

self = <tests.test_06_comment.Test06CommentAPI object at 0x0000017A1233F5D0>
admin_client = <rest_framework.test.APIClient object at 0x0000017A1233CE90>
admin = <User: TestAdmin>
client = <django.test.client.Client object at 0x0000017A1233D350>
user_client = <rest_framework.test.APIClient object at 0x0000017A1233FC50>
user = <User: TestUser>
moderator_client = <rest_framework.test.APIClient object at 0x0000017A1224E850>
moderator = <User: TestModerator>

    def test_06_comment_detail_not_auth(self, admin_client, admin, client,
                                        user_client, user, moderator_client,
                                        moderator):
        author_map = {
            admin: admin_client,
            user: user_client,
            moderator: moderator_client
        }
>       comments, reviews, titles = create_comments(admin_client, author_map)

tests\test_06_comment.py:329: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\utils.py:267: in create_comments
    reviews, titles = create_reviews(admin_client, authors_map)
tests\utils.py:248: in create_reviews
    titles, _, _ = create_titles(admin_client)
tests\utils.py:227: in create_titles
    response = admin_client.post('/api/v1/titles/', data=data)
venv\Lib\site-packages\rest_framework\test.py:295: in post
    response = super().post(
venv\Lib\site-packages\rest_framework\test.py:209: in post
    return self.generic('POST', path, data, content_type, **extra)
venv\Lib\site-packages\rest_framework\test.py:233: in generic
    return super().generic(
venv\Lib\site-packages\django\test\client.py:473: in generic
    return self.request(**r)
venv\Lib\site-packages\rest_framework\test.py:285: in request
    return super().request(**kwargs)
venv\Lib\site-packages\rest_framework\test.py:237: in request
    request = super().request(**kwargs)
venv\Lib\site-packages\django\test\client.py:719: in request
    self.check_exception(response)
venv\Lib\site-packages\django\test\client.py:580: in check_exception
    raise exc_value
venv\Lib\site-packages\django\core\handlers\exception.py:47: in inner
    response = get_response(request)
venv\Lib\site-packages\django\core\handlers\base.py:181: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
venv\Lib\site-packages\django\views\decorators\csrf.py:54: in wrapped_view
    return view_func(*args, **kwargs)
venv\Lib\site-packages\rest_framework\viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\views.py:509: in dispatch
    response = self.handle_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:469: in handle_exception
    self.raise_uncaught_exception(exc)
venv\Lib\site-packages\rest_framework\views.py:480: in raise_uncaught_exception
    raise exc
venv\Lib\site-packages\rest_framework\views.py:506: in dispatch
    response = handler(request, *args, **kwargs)
venv\Lib\site-packages\rest_framework\mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
venv\Lib\site-packages\rest_framework\serializers.py:548: in data
    ret = super().data
venv\Lib\site-packages\rest_framework\serializers.py:246: in data
    self._data = self.to_representation(self.instance)
venv\Lib\site-packages\rest_framework\serializers.py:515: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
venv\Lib\site-packages\rest_framework\fields.py:1882: in to_representation
    return method(value)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = TitleCreateSerializer(context={'request': <rest_framework.request.Request: POST '/api/v1/titles/'>, 'format': None, 'v...='slug')
    category = SlugRelatedField(queryset=<QuerySet [<Category: Фильм>, <Category: Книги>]>, slug_field='slug')
obj = <Title: Терминатор>

    def get_rating(self, obj):
        reviews = Review.objects.all().filter(
            title_id=obj.id
        )
        rating = reviews.aggregate(Avg('score'))
>       return int(list(rating.values())[0])
E       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'

api_yamdb\api\serializers.py:163: TypeError
------------------------------ Captured log call ------------------------------
ERROR    django.request:log.py:224 Internal Server Error: /api/v1/titles/
Traceback (most recent call last):
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\exception.py", line 47, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\core\handlers\base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\views\decorators\csrf.py", line 54, in wrapped_view
    return view_func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\mixins.py", line 20, in create
    headers = self.get_success_headers(serializer.data)
                                       ^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 548, in data
    ret = super().data
          ^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 246, in data
    self._data = self.to_representation(self.instance)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\serializers.py", line 515, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\fields.py", line 1882, in to_representation
    return method(value)
           ^^^^^^^^^^^^^
  File "C:\Users\Alexander\YP\Dev\api_yamdb\api_yamdb\api\serializers.py", line 163, in get_rating
    return int(list(rating.values())[0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'
-------------------------- Captured stderr teardown ---------------------------
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
============================== warnings summary ===============================
venv\Lib\site-packages\django\http\request.py:1
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\http\request.py:1: DeprecationWarning: 'cgi' is deprecated and slated for removal in Python 3.13
    import cgi

venv\Lib\site-packages\django\utils\encoding.py:266
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\utils\encoding.py:266: DeprecationWarning: Use setlocale(), getencoding() and getlocale() instead
    encoding = locale.getdefaultlocale()[1] or 'ascii'

tests/test_00_user_registration.py: 3527 warnings
tests/test_01_users.py: 4804 warnings
tests/test_02_category.py: 1157 warnings
tests/test_03_genre.py: 1167 warnings
tests/test_04_title.py: 1111 warnings
tests/test_05_review.py: 1195 warnings
tests/test_06_comment.py: 1435 warnings
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\django\utils\asyncio.py:19: DeprecationWarning: There is no current event loop
    event_loop = asyncio.get_event_loop()

tests/test_01_users.py::Test01UserAPI::test_04_users_get_admin
tests/test_01_users.py::Test01UserAPI::test_04_02_users_get_search
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\pagination.py:200: UnorderedObjectListWarning: Pagination may yield inconsistent results with an unordered object_list: <class 'reviews.models.User'> QuerySet.
    paginator = self.django_paginator_class(queryset, page_size)

tests/test_02_category.py::Test02CategoryAPI::test_01_category_not_auth
tests/test_02_category.py::Test02CategoryAPI::test_02_category_with_admin_user
tests/test_02_category.py::Test02CategoryAPI::test_04_category_delete_admin
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\pagination.py:200: UnorderedObjectListWarning: Pagination may yield inconsistent results with an unordered object_list: <class 'reviews.models.Category'> QuerySet.
    paginator = self.django_paginator_class(queryset, page_size)

tests/test_03_genre.py::Test03GenreAPI::test_01_genre_not_auth
tests/test_03_genre.py::Test03GenreAPI::test_02_genre
tests/test_03_genre.py::Test03GenreAPI::test_04_genres_delete
  C:\Users\Alexander\YP\Dev\api_yamdb\venv\Lib\site-packages\rest_framework\pagination.py:200: UnorderedObjectListWarning: Pagination may yield inconsistent results with an unordered object_list: <class 'reviews.models.Genre'> QuerySet.
    paginator = self.django_paginator_class(queryset, page_size)

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ===========================
FAILED tests/test_02_category.py::Test02CategoryAPI::test_02_category_with_admin_user
FAILED tests/test_02_category.py::Test02CategoryAPI::test_04_category_delete_admin
FAILED tests/test_03_genre.py::Test03GenreAPI::test_02_genre - AssertionError...
FAILED tests/test_03_genre.py::Test03GenreAPI::test_04_genres_delete - Assert...
FAILED tests/test_04_title.py::Test04TitleAPI::test_02_title_admin - TypeErro...
FAILED tests/test_04_title.py::Test04TitleAPI::test_03_titles_detail - TypeEr...
FAILED tests/test_04_title.py::Test04TitleAPI::test_04_titles_name_length_validation
FAILED tests/test_04_title.py::Test04TitleAPI::test_05_titles_check_permission
FAILED tests/test_05_review.py::Test05ReviewAPI::test_01_review_not_auth - Ty...
FAILED tests/test_05_review.py::Test05ReviewAPI::test_02_review_post - TypeEr...
FAILED tests/test_05_review.py::Test05ReviewAPI::test_03_review_detail_get - ...
FAILED tests/test_05_review.py::Test05ReviewAPI::test_04_review_detail_user
FAILED tests/test_05_review.py::Test05ReviewAPI::test_05_reviews_detail_moderator_and_admin
FAILED tests/test_06_comment.py::Test06CommentAPI::test_01_comment_not_auth
FAILED tests/test_06_comment.py::Test06CommentAPI::test_02_comment - TypeErro...
FAILED tests/test_06_comment.py::Test06CommentAPI::test_03_comment_detail_get
FAILED tests/test_06_comment.py::Test06CommentAPI::test_04_comment_detail__user_patch_delete
FAILED tests/test_06_comment.py::Test06CommentAPI::test_05_comment_detail_admin_and_moderator
FAILED tests/test_06_comment.py::Test06CommentAPI::test_06_comment_detail_not_auth
=============== 19 failed, 58 passed, 14406 warnings in 30.03s ================
